package com.ajurczyk.properties.impl;


import com.ajurczyk.properties.IPropertiesManager;
import com.ajurczyk.properties.PropertyNotFoundException;

import java.io.*;
import java.util.Properties;
import java.util.Set;

/**
 * Implementation of the properties manager.
 *
 * @author lukasz.nowak@seedlabs.io
 */
public class PropertiesManager implements IPropertiesManager {

    private String propertiesFile;
    private final Properties properties = new Properties();

    /**
     * Create properties manager on given file.
     *
     * @param propertiesFile properties file
     * @throws IOException throw when loading of the properties file fail
     */
    public PropertiesManager(String propertiesFile) throws IOException {
        this.propertiesFile = propertiesFile;
        loadSettings(propertiesFile);
    }

    public PropertiesManager(InputStream inStream) throws IOException {
        properties.load(inStream);
    }

    @Override
    public String getProperty(String propertyName) throws PropertyNotFoundException {
        final String propertyValue = properties.getProperty(propertyName);
        if (propertyValue == null) {
            throw new PropertyNotFoundException("Property " + propertyName + " not found.");
        } else {
            return propertyValue;
        }
    }

    @Override
    public void saveProperty(String key, String value) throws IOException {
        properties.setProperty(key, value);

        if (propertiesFile != null) {
            FileOutputStream fos = null;
            try {
                fos = new FileOutputStream(propertiesFile);
                properties.store(fos, "File generated by MATE.");
            } finally {
                if (fos != null) {
                    fos.close();
                }
            }

        }
    }

    @Override
    public Set<String> getPropertiesNames() {
        return properties.stringPropertyNames();
    }

    private void loadSettings(String file) throws IOException {
        final File settingsFile = new File(file);
        if (!settingsFile.exists()) {
            throw new FileNotFoundException("File " + file + " was not found.");
        }
        final BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(settingsFile), "UTF-8"));
        try {
            properties.load(reader);
        } finally {
            reader.close();
        }
    }
}
